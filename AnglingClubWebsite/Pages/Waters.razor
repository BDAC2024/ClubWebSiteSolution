@page "/Waters"
@using AnglingClubWebsite.Extensions
@inject NavigationManager navManager;
@inject INavigationService navigationService;
@inject IJSRuntime JSRuntime

@inherits MvvmComponentBase<WatersViewModel>

<h3 class="@(ViewModel.CurrentUser.Admin ? "left-header" : "")">Club Waters</h3>

@if (ViewModel.CurrentUser.Admin)
{
    <div class="edit-button-panel">
        @if (!ViewModel.IsUnlocked)
        {
            <SfButton CssClass="e-primary edit-button" @onclick="(() => ViewModel.Unlock(true))"><i class="fa-solid fa-lock-open" /> Unlock</SfButton>
        }
        else
        {
            <SfButton CssClass="e-primary edit-button" @onclick="(() => ViewModel.Unlock(false))"><i class="fa-solid fa-lock" /> Lock</SfButton>
        }
    </div>
    <br />
    <br />
}
<h6>PLEASE COMPLY WITH ALL NOTICE BOARDS</h6>
<p>
    Keep to all footpaths, do not wander from banks. All gates must be closed after being opened. Do not climb on walls. Do not cause a parking obstruction by blocking gateways etc.
</p>

@foreach (var item in ViewModel.Items)
{
    <span>
        @if (ViewModel.Water != null && ViewModel.Water.DbKey == item.DbKey)
        {
            @*             <EditableCard Submitting="ViewModel.Submitting"
                          CancelAction="@(() => ViewModel.CancelCommand.Execute(null))"
                          SaveAction="@(() => ViewModel.SaveCommand.Execute(null))">
                <EditableNewsCardContent Item="@ViewModel.NewsItem"></EditableNewsCardContent>
            </EditableCard>
 *@        }
        else
        {
            <SfCard>
                <CardContent>
                    <div class="card-title">
                        @item.Name
                    </div>
                    <div class="card-subtitle">
                        @item.WaterType
                    </div>
                    <div class="card-subtitle">
                        @item.AccessType
                    </div>
                    <div class="card-subtitle">
                        Main Species: @item.Species
                    </div>
                    <div class="card-content">
                        <div>
                            @((MarkupString)item.Description)
                        </div>
                        <h6>Directions</h6>
                        <div title="What 3 Words divides the world into 3 metre squares and gives each square a unique combination of three words. Clicking the link will open it on a map.">
                            What 3 Words car parking location(s):
                            <ul>
                                @foreach (var w3w in item.W3w)
                                {
                                    <li style="padding-left: 20px; margin-bottom: 0;">
                                        <a href="@w3w.Url.SanitizeUrl()" target="_blank">@w3w.CarPark</a>
                                    </li>
                                }
                            </ul>
                            <br />
                        </div>
                        <div>
                            @((MarkupString)item.Directions)
                        </div>
                        <br />
                        <h6>Access Video</h6>
                        @if (!string.IsNullOrEmpty(item.VideoShortCode) && !onLocalhost())
                        {
                            <iframe src=@($"{Constants.VIDEO_BASE_URL}/{item.VideoShortCode}".SanitizeUrl())
                            width="@ViewModel.VideoWidth" height="@ViewModel.VideoHeight"
                            title="YouTube video player"
                            frameborder="0"
                            allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                            referrerpolicy="strict-origin-when-cross-origin"
                            allowfullscreen>
                            </iframe>
                            <br />
                        }
                        else
                        {
                            <span>Access video is not yet available for this water.<br /><br /></span>
                        }
                        <div>
                            <h6>Driving Directions</h6>
                            <a target="_blank" href="@ViewModel.DirectionUrl(item).SanitizeUrl()">Link to full driving directions</a> Please note: These directions take you as far as Google maps currently covers. You may need to continue along the following yellow marked route to reach the venue parking area.
                            <h6>Location</h6>
                            <table border="0">
                                <tr>
                                    <td align="center">
                                        <img width="20" src='images\car.png'>
                                    </td>
                                    <td style="width: 18px;"> </td>
                                    @if (item.Path.Count() > 0)
                                    {
                                        <td align="center">
                                            <div style="display: inline; color: lightgreen; font-weight:900;"><b>_____</b><br /><br /></div>
                                        </td>
                                    }
                                    <td style="width: 18px;"> </td>
                                    @if (item.HasLimits)
                                    {
                                        <td align="center">
                                            <img width="20" src='images\limit.png'>
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <td align="center">
                                        Car Parking
                                    </td>
                                    <td style="width: 18px;"> </td>
                                    @if (item.Path.Count() > 0)
                                    {
                                        <td align="center">
                                            Route
                                        </td>
                                    }
                                    <td style="width: 18px;"> </td>
                                    @if (item.HasLimits)
                                    {
                                        <td align="center">
                                            Limit of stretch
                                        </td>
                                    }
                                </tr>
                            </table>
                            <div id=@($"map-{item.DbKey}") class="water-map">
                            </div>
                        </div>
                    </div>
                </CardContent>
                <CardFooter>
                    <CardFooterContent>
                        @if (ViewModel.IsUnlocked)
                        {
                            <div class="edit-button-panel">
                                <SfButton CssClass="e-btn e-outline e-primary edit-button" @onclick="(async () => await ViewModel.OnWaterEdited(item.DbKey))"> <i class="@($"fa-solid fa-pencil card-icon")" /> Edit </SfButton>
                            </div>
                        }
                    </CardFooterContent>
                </CardFooter>
            </SfCard>

        }
    </span>
}

@if (!ViewModel.IsLoggedIn && !ViewModel.Loading)
{
    <SfMessage Severity="MessageSeverity.Warning">
        Currently hiding members only waters.
        <br />
        <br />
        <a @onclick="LoginThenRedirect" href="javascript:void(0)">Members can log in here</a>
    </SfMessage>
}


@code {
    private void LoginThenRedirect()
    {
        navigationService.NavigateTo($"/login/{CallingRoute}");
    }

    private string CallingRoute
    {
        get
        {
            return navManager.Uri.Replace(navManager.BaseUri, "");
        }
    }

    private bool onLocalhost()
    {
        return navManager.Uri.Contains("localhost");
    }

}
