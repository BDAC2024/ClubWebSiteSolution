@page "/News"

@inherits MvvmComponentBase<NewsViewModel>

<h3 class="@(ViewModel.CurrentUser.Admin ? "left-header" : "")">Latest News</h3>

@if (ViewModel.CurrentUser.Admin)
{
    <div class="edit-button-panel">
        @if (ViewModel.IsUnlocked)
        {
            <SfButton CssClass="e-primary edit-button" @onclick="ViewModel.AddNewsItem"><i class="fa-solid fa-add" /> Add news item</SfButton>
        }

        @if (!ViewModel.IsUnlocked)
        {
            <SfButton CssClass="e-primary edit-button" @onclick="(() => ViewModel.Unlock(true))"><i class="fa-solid fa-lock-open"/> Unlock</SfButton>
        }
        else
        {
            <SfButton CssClass="e-primary edit-button" @onclick="(() => ViewModel.Unlock(false))"><i class="fa-solid fa-lock" /> Lock</SfButton>
        }
    </div>
    <br />
    <br />
}

@if (ViewModel.IsAdding)
{
    <span>
        <SfCard class="e-card editable-card">
            <CardContent>
                <EditForm Model="@ViewModel.NewsItem">
                    <fieldset>
                        <SfTextBox Placeholder='Title' @bind-Value="@ViewModel.NewsItem!.Title" FloatLabelType='@FloatLabelType.Auto'></SfTextBox>
                        <br/>
                        <br />
                        <SfDatePicker TValue="DateTime" Width="200px" Format="dd MMM yy" Placeholder="Publication Date" @bind-Value="@ViewModel.NewsItem.Date"></SfDatePicker>
                        <br/>
                        <SfTextBox Placeholder='News item text' @bind-Value="@ViewModel.NewsItem!.Body" FloatLabelType='@FloatLabelType.Auto'></SfTextBox>

                        @* <MvvmValidationSummary Context="ViewModel.LoginInfo"></MvvmValidationSummary> *@
                    </fieldset>
                </EditForm>
            </CardContent>
            <CardFooter>
                <CardFooterContent>
                    <div class="edit-button-panel">
                        <SfButton CssClass="e-btn e-primary edit-button" @onclick="(() => ViewModel.CancelCommand.Execute(null))"> <i class="fa-solid fa-xmark card-icon" /> Cancel </SfButton>
                        <SfButton CssClass="e-btn e-primary edit-button" @onclick="(() => ViewModel.SaveCommand.Execute(null))"> <i class="fa-solid fa-save card-icon" /> Save </SfButton>
                    </div>
                </CardFooterContent>
            </CardFooter>
        </SfCard>
    </span>
}

@foreach (var item in ViewModel.Items)
{
    <NewsCard ItemId="@item.DbKey"
              Title="@item.Title"
              SubTitle="@item.Date.ToString("dd MMM yy")"
              IsNew="ViewModel.IsNew(item.Date)"
              Button1Text="@(ViewModel.IsUnlocked ? "Delete" : "")"
              Button1Icon="@(ViewModel.IsUnlocked ? "fa-trash" : "")"
              Button1Action="@(async (string itemId) => await ViewModel.OnNewsItemDeleted(item))"
              Button2Text="@(ViewModel.IsUnlocked ? "Edit" : "")"
              Button2Icon="@(ViewModel.IsUnlocked ? "fa-pencil" : "")"
              Button2Action="@(async (string itemId) => await ViewModel.OnNewsItemEdited(itemId))">
        @((MarkupString)item.Body)
    </NewsCard>
}

